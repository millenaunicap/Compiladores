
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALSleftORleftANDnonassocMAIOR_QUEMENOR_QUEMA_IGUALME_IGUALDIF_DECOMPARAleftPLUSMINUSleftMULTDIVMODrightNOTleftINCREMENTDECREMENTleftARROWAND ARROW BOOLEAN BREAK CASE CHAR COLON COMMA COMMENTS COMPARA CONTINUE DECREMENT DEFAULT DIF_DE DIV DOT DOUBLE ELSE EQUALS FLOAT FOR ID IF INCREMENT INT LBRACE LBRACKET LPAREN MAIOR_QUE MA_IGUAL MENOR_QUE ME_IGUAL MINUS MOD MULT NOT NUMBER NUM_DEC OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRUCT SWITCH TEXTO WHILEPrograma : ListaDeclaracoes\n    ListaDeclaracoes : Declaracao\n                     | ListaDeclaracoes Declaracao\n    \n    Declaracao : DeclaracaoVariavel\n               | DeclaracaoFuncao\n               | Comentario\n               | DeclaracaoEstrutura\n               | EstruturaControle\n               | Expressao\n    \n    DeclaracaoVariavel : Tipo ID SEMICOLON\n                       | Tipo ID EQUALS Expressao SEMICOLON\n    \n    Tipo : INT\n         | FLOAT\n         | DOUBLE\n         | CHAR\n         | BOOLEAN\n    \n    DeclaracaoFuncao : Tipo ID LPAREN Parametros RPAREN Bloco\n    \n    Parametros : Parametro\n               | Parametro COMMA Parametros\n               | vazio\n    \n    Parametro : Tipo ID\n    \n    Bloco : LBRACE ListaDeclaracoes RBRACE\n    \n    Comentario : COMMENTS\n    \n    Expressao : Atribuicao\n              | ExpressaoLogica\n              | ExpressaoRelacional\n              | ExpressaoAritmetica\n              | Termo\n              | Fator\n    \n    Atribuicao : ID EQUALS Expressao\n    \n    EstruturaControle : If\n                      | While\n                      | For\n                      | Switch\n                      | Break\n                      | Continue\n                      | Return\n    \n    If : IF LPAREN Expressao RPAREN Bloco\n       | IF LPAREN Expressao RPAREN Bloco ELSE Bloco\n    \n    While : WHILE LPAREN Expressao RPAREN Bloco\n    \n    For : FOR LPAREN Expressao SEMICOLON Expressao SEMICOLON Expressao RPAREN Bloco\n    \n    Switch : SWITCH LPAREN Expressao RPAREN LBRACE CaseLista RBRACE\n    \n    CaseLista : CaseDecl\n              | CaseLista CaseDecl\n    \n    CaseDecl : CASE Expressao COLON Bloco\n             | DEFAULT COLON Bloco\n    \n    Break : BREAK SEMICOLON\n    \n    Continue : CONTINUE SEMICOLON\n    \n    Return : RETURN Expressao SEMICOLON\n    \n    DeclaracaoEstrutura : STRUCT ID LBRACE ListaDeclaracoes RBRACE SEMICOLON\n    vazio :\n    ExpressaoLogica : ExpressaoRelacional\n                    | ExpressaoLogica AND ExpressaoRelacional\n                    | ExpressaoLogica OR ExpressaoRelacional\n                    | NOT ExpressaoRelacional\n    \n    ExpressaoRelacional : ExpressaoAritmetica\n                        | ExpressaoAritmetica MAIOR_QUE ExpressaoAritmetica\n                        | ExpressaoAritmetica MENOR_QUE ExpressaoAritmetica\n                        | ExpressaoAritmetica MA_IGUAL ExpressaoAritmetica\n                        | ExpressaoAritmetica ME_IGUAL ExpressaoAritmetica\n                        | ExpressaoAritmetica DIF_DE ExpressaoAritmetica\n                        | ExpressaoAritmetica COMPARA ExpressaoAritmetica\n    \n    ExpressaoAritmetica : ExpressaoAritmetica PLUS Termo SEMICOLON\n                        | ExpressaoAritmetica MINUS Termo\n                        | Termo\n    \n    Termo : Termo MULT Fator\n          | Termo DIV Fator\n          | Termo MOD Fator\n          | Fator\n    \n    Fator : LPAREN Expressao RPAREN\n          | NUMBER\n          | NUM_DEC\n          | ID\n          | TEXTO\n    '
    
_lr_action_items = {'COMMENTS':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[13,13,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,13,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,13,-63,-11,-38,13,-40,-17,-50,13,-39,-22,-42,-41,]),'STRUCT':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[14,14,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,14,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,14,-63,-11,-38,14,-40,-17,-50,14,-39,-22,-42,-41,]),'INT':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,112,114,115,116,119,121,123,129,130,132,139,],[28,28,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,28,-30,-70,28,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,28,-63,-11,28,-38,28,-40,-17,-50,28,-39,-22,-42,-41,]),'FLOAT':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,112,114,115,116,119,121,123,129,130,132,139,],[29,29,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,29,-30,-70,29,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,29,-63,-11,29,-38,29,-40,-17,-50,29,-39,-22,-42,-41,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,112,114,115,116,119,121,123,129,130,132,139,],[30,30,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,30,-30,-70,30,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,30,-63,-11,30,-38,30,-40,-17,-50,30,-39,-22,-42,-41,]),'CHAR':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,112,114,115,116,119,121,123,129,130,132,139,],[31,31,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,31,-30,-70,31,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,31,-63,-11,31,-38,31,-40,-17,-50,31,-39,-22,-42,-41,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,112,114,115,116,119,121,123,129,130,132,139,],[32,32,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,32,-30,-70,32,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,32,-63,-11,32,-38,32,-40,-17,-50,32,-39,-22,-42,-41,]),'IF':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[33,33,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,33,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,33,-63,-11,-38,33,-40,-17,-50,33,-39,-22,-42,-41,]),'WHILE':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[34,34,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,34,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,34,-63,-11,-38,34,-40,-17,-50,34,-39,-22,-42,-41,]),'FOR':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[35,35,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,35,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,35,-63,-11,-38,35,-40,-17,-50,35,-39,-22,-42,-41,]),'SWITCH':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[36,36,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,36,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,36,-63,-11,-38,36,-40,-17,-50,36,-39,-22,-42,-41,]),'BREAK':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[37,37,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,37,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,37,-63,-11,-38,37,-40,-17,-50,37,-39,-22,-42,-41,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[38,38,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,38,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,38,-63,-11,-38,38,-40,-17,-50,38,-39,-22,-42,-41,]),'RETURN':([0,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,115,116,119,121,123,129,130,132,139,],[39,39,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,39,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,39,-63,-11,-38,39,-40,-17,-50,39,-39,-22,-42,-41,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,40,41,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,99,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[11,11,-2,-4,-5,-6,-7,-8,-9,45,-73,11,-23,48,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-12,-13,-14,-15,-16,11,73,-71,-72,-74,-3,11,73,73,73,73,73,73,73,73,73,73,73,73,73,11,11,11,11,-47,-48,-55,-56,-65,-69,-73,-10,11,-30,-70,11,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,110,11,-63,11,-11,-38,11,-40,-17,-50,11,11,11,-39,-22,-42,-41,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,39,41,42,43,44,46,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[40,40,-2,-4,-5,-6,-7,-8,-9,-73,40,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,40,-71,-72,-74,-3,40,40,40,40,40,-47,-48,-55,-56,-65,-69,-73,-10,40,-30,-70,40,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,40,-63,40,-11,-38,40,-40,-17,-50,40,40,40,-39,-22,-42,-41,]),'LPAREN':([0,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,33,34,35,36,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[12,12,-2,-4,-5,-6,-7,-8,-9,-73,12,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,62,63,64,65,12,12,-71,-72,-74,-3,76,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-47,-48,-55,-56,-65,-69,-73,-10,12,-30,-70,12,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,12,-63,12,-11,-38,12,-40,-17,-50,12,12,12,-39,-22,-42,-41,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,39,40,41,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[41,41,-2,-4,-5,-6,-7,-8,-9,-73,41,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,41,41,-71,-72,-74,-3,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-47,-48,-55,-56,-65,-69,-73,-10,41,-30,-70,41,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,41,-63,41,-11,-38,41,-40,-17,-50,41,41,41,-39,-22,-42,-41,]),'NUM_DEC':([0,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,39,40,41,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[42,42,-2,-4,-5,-6,-7,-8,-9,-73,42,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,42,42,-71,-72,-74,-3,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-47,-48,-55,-56,-65,-69,-73,-10,42,-30,-70,42,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,42,-63,42,-11,-38,42,-40,-17,-50,42,42,42,-39,-22,-42,-41,]),'TEXTO':([0,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,39,40,41,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,107,109,114,115,116,119,121,123,124,127,129,130,132,139,],[43,43,-2,-4,-5,-6,-7,-8,-9,-73,43,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,43,43,-71,-72,-74,-3,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-47,-48,-55,-56,-65,-69,-73,-10,43,-30,-70,43,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,43,-63,43,-11,-38,43,-40,-17,-50,43,43,43,-39,-22,-42,-41,]),'$end':([1,2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,80,81,82,83,84,85,86,87,89,90,91,92,97,104,109,114,116,119,121,129,130,132,139,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,-63,-11,-38,-40,-17,-50,-39,-22,-42,-41,]),'RBRACE':([3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,41,42,43,44,66,67,69,70,71,72,73,74,77,78,80,81,82,83,84,85,86,87,89,90,91,92,97,103,104,109,114,116,119,121,123,125,126,129,130,132,133,138,139,140,],[-2,-4,-5,-6,-7,-8,-9,-73,-23,-31,-32,-33,-34,-35,-36,-37,-24,-25,-26,-27,-28,-29,-71,-72,-74,-3,-47,-48,-55,-56,-65,-69,-73,-10,-30,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-49,113,-63,-11,-38,-40,-17,-50,130,132,-43,-39,-22,-42,-44,-46,-41,-45,]),'EQUALS':([11,45,],[46,75,]),'MULT':([11,26,27,41,42,43,71,72,73,78,88,89,90,91,92,],[-73,59,-69,-71,-72,-74,59,-69,-73,-70,59,59,-66,-67,-68,]),'DIV':([11,26,27,41,42,43,71,72,73,78,88,89,90,91,92,],[-73,60,-69,-71,-72,-74,60,-69,-73,-70,60,60,-66,-67,-68,]),'MOD':([11,26,27,41,42,43,71,72,73,78,88,89,90,91,92,],[-73,61,-69,-71,-72,-74,61,-69,-73,-70,61,61,-66,-67,-68,]),'MAIOR_QUE':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,51,-65,-69,-71,-72,-74,51,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'MENOR_QUE':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,52,-65,-69,-71,-72,-74,52,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'MA_IGUAL':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,53,-65,-69,-71,-72,-74,53,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'ME_IGUAL':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,54,-65,-69,-71,-72,-74,54,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'DIF_DE':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,55,-65,-69,-71,-72,-74,55,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'COMPARA':([11,25,26,27,41,42,43,70,71,72,73,78,89,90,91,92,104,],[-73,56,-65,-69,-71,-72,-74,56,-65,-69,-73,-70,-64,-66,-67,-68,-63,]),'PLUS':([11,25,26,27,41,42,43,70,71,72,73,78,82,83,84,85,86,87,89,90,91,92,104,],[-73,57,-65,-69,-71,-72,-74,57,-65,-69,-73,-70,57,57,57,57,57,57,-64,-66,-67,-68,-63,]),'MINUS':([11,25,26,27,41,42,43,70,71,72,73,78,82,83,84,85,86,87,89,90,91,92,104,],[-73,58,-65,-69,-71,-72,-74,58,-65,-69,-73,-70,58,58,58,58,58,58,-64,-66,-67,-68,-63,]),'AND':([11,23,24,25,26,27,41,42,43,69,70,71,72,73,78,80,81,82,83,84,85,86,87,89,90,91,92,104,],[-73,49,-52,-56,-65,-69,-71,-72,-74,-55,-56,-65,-69,-73,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-63,]),'OR':([11,23,24,25,26,27,41,42,43,69,70,71,72,73,78,80,81,82,83,84,85,86,87,89,90,91,92,104,],[-73,50,-52,-56,-65,-69,-71,-72,-74,-55,-56,-65,-69,-73,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-63,]),'RPAREN':([11,22,23,24,25,26,27,41,42,43,47,69,70,71,72,73,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,100,101,102,104,110,112,120,131,],[-73,-24,-25,-26,-27,-28,-29,-71,-72,-74,78,-55,-56,-65,-69,-73,-51,-30,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,105,106,108,111,-18,-20,-63,-21,-51,-19,136,]),'SEMICOLON':([11,22,23,24,25,26,27,37,38,41,42,43,45,68,69,70,71,72,73,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,95,98,104,113,117,],[-73,-24,-25,-26,-27,-28,-29,66,67,-71,-72,-74,74,97,-55,-56,-65,-69,-73,-30,-70,-53,-54,-57,-58,-59,-60,-61,-62,104,-64,-66,-67,-68,107,109,-63,121,124,]),'COLON':([11,22,23,24,25,26,27,41,42,43,69,70,71,72,73,77,78,80,81,82,83,84,85,86,87,89,90,91,92,104,128,134,],[-73,-24,-25,-26,-27,-28,-29,-71,-72,-74,-55,-56,-65,-69,-73,-30,-70,-53,-54,-57,-58,-59,-60,-61,-62,-64,-66,-67,-68,-63,135,137,]),'LBRACE':([48,105,106,108,111,122,135,136,137,],[79,115,115,118,115,115,115,115,115,]),'COMMA':([101,110,],[112,-21,]),'ELSE':([114,130,],[122,-22,]),'CASE':([118,125,126,130,133,138,140,],[127,127,-43,-22,-44,-46,-45,]),'DEFAULT':([118,125,126,130,133,138,140,],[128,128,-43,-22,-44,-46,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'ListaDeclaracoes':([0,79,115,],[2,103,123,]),'Declaracao':([0,2,79,103,115,123,],[3,44,3,44,3,44,]),'DeclaracaoVariavel':([0,2,79,103,115,123,],[4,4,4,4,4,4,]),'DeclaracaoFuncao':([0,2,79,103,115,123,],[5,5,5,5,5,5,]),'Comentario':([0,2,79,103,115,123,],[6,6,6,6,6,6,]),'DeclaracaoEstrutura':([0,2,79,103,115,123,],[7,7,7,7,7,7,]),'EstruturaControle':([0,2,79,103,115,123,],[8,8,8,8,8,8,]),'Expressao':([0,2,12,39,46,62,63,64,65,75,79,103,107,115,123,124,127,],[9,9,47,68,77,93,94,95,96,98,9,9,117,9,9,131,134,]),'Tipo':([0,2,76,79,103,112,115,123,],[10,10,99,10,10,99,10,10,]),'If':([0,2,79,103,115,123,],[15,15,15,15,15,15,]),'While':([0,2,79,103,115,123,],[16,16,16,16,16,16,]),'For':([0,2,79,103,115,123,],[17,17,17,17,17,17,]),'Switch':([0,2,79,103,115,123,],[18,18,18,18,18,18,]),'Break':([0,2,79,103,115,123,],[19,19,19,19,19,19,]),'Continue':([0,2,79,103,115,123,],[20,20,20,20,20,20,]),'Return':([0,2,79,103,115,123,],[21,21,21,21,21,21,]),'Atribuicao':([0,2,12,39,46,62,63,64,65,75,79,103,107,115,123,124,127,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ExpressaoLogica':([0,2,12,39,46,62,63,64,65,75,79,103,107,115,123,124,127,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ExpressaoRelacional':([0,2,12,39,40,46,49,50,62,63,64,65,75,79,103,107,115,123,124,127,],[24,24,24,24,69,24,80,81,24,24,24,24,24,24,24,24,24,24,24,24,]),'ExpressaoAritmetica':([0,2,12,39,40,46,49,50,51,52,53,54,55,56,62,63,64,65,75,79,103,107,115,123,124,127,],[25,25,25,25,70,25,70,70,82,83,84,85,86,87,25,25,25,25,25,25,25,25,25,25,25,25,]),'Termo':([0,2,12,39,40,46,49,50,51,52,53,54,55,56,57,58,62,63,64,65,75,79,103,107,115,123,124,127,],[26,26,26,26,71,26,71,71,71,71,71,71,71,71,88,89,26,26,26,26,26,26,26,26,26,26,26,26,]),'Fator':([0,2,12,39,40,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,79,103,107,115,123,124,127,],[27,27,27,27,72,27,72,72,72,72,72,72,72,72,72,72,90,91,92,27,27,27,27,27,27,27,27,27,27,27,27,]),'Parametros':([76,112,],[100,120,]),'Parametro':([76,112,],[101,101,]),'vazio':([76,112,],[102,102,]),'Bloco':([105,106,111,122,135,136,137,],[114,116,119,129,138,139,140,]),'CaseLista':([118,],[125,]),'CaseDecl':([118,125,],[126,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> ListaDeclaracoes','Programa',1,'p_program','analisadorsintatico.py',133),
  ('ListaDeclaracoes -> Declaracao','ListaDeclaracoes',1,'p_lista_declaracoes','analisadorsintatico.py',138),
  ('ListaDeclaracoes -> ListaDeclaracoes Declaracao','ListaDeclaracoes',2,'p_lista_declaracoes','analisadorsintatico.py',139),
  ('Declaracao -> DeclaracaoVariavel','Declaracao',1,'p_declaracao','analisadorsintatico.py',148),
  ('Declaracao -> DeclaracaoFuncao','Declaracao',1,'p_declaracao','analisadorsintatico.py',149),
  ('Declaracao -> Comentario','Declaracao',1,'p_declaracao','analisadorsintatico.py',150),
  ('Declaracao -> DeclaracaoEstrutura','Declaracao',1,'p_declaracao','analisadorsintatico.py',151),
  ('Declaracao -> EstruturaControle','Declaracao',1,'p_declaracao','analisadorsintatico.py',152),
  ('Declaracao -> Expressao','Declaracao',1,'p_declaracao','analisadorsintatico.py',153),
  ('DeclaracaoVariavel -> Tipo ID SEMICOLON','DeclaracaoVariavel',3,'p_declaracao_variavel','analisadorsintatico.py',159),
  ('DeclaracaoVariavel -> Tipo ID EQUALS Expressao SEMICOLON','DeclaracaoVariavel',5,'p_declaracao_variavel','analisadorsintatico.py',160),
  ('Tipo -> INT','Tipo',1,'p_tipo','analisadorsintatico.py',169),
  ('Tipo -> FLOAT','Tipo',1,'p_tipo','analisadorsintatico.py',170),
  ('Tipo -> DOUBLE','Tipo',1,'p_tipo','analisadorsintatico.py',171),
  ('Tipo -> CHAR','Tipo',1,'p_tipo','analisadorsintatico.py',172),
  ('Tipo -> BOOLEAN','Tipo',1,'p_tipo','analisadorsintatico.py',173),
  ('DeclaracaoFuncao -> Tipo ID LPAREN Parametros RPAREN Bloco','DeclaracaoFuncao',6,'p_declaracao_funcao','analisadorsintatico.py',179),
  ('Parametros -> Parametro','Parametros',1,'p_parametros','analisadorsintatico.py',185),
  ('Parametros -> Parametro COMMA Parametros','Parametros',3,'p_parametros','analisadorsintatico.py',186),
  ('Parametros -> vazio','Parametros',1,'p_parametros','analisadorsintatico.py',187),
  ('Parametro -> Tipo ID','Parametro',2,'p_parametro','analisadorsintatico.py',196),
  ('Bloco -> LBRACE ListaDeclaracoes RBRACE','Bloco',3,'p_bloco','analisadorsintatico.py',202),
  ('Comentario -> COMMENTS','Comentario',1,'p_comentario','analisadorsintatico.py',208),
  ('Expressao -> Atribuicao','Expressao',1,'p_expressao','analisadorsintatico.py',214),
  ('Expressao -> ExpressaoLogica','Expressao',1,'p_expressao','analisadorsintatico.py',215),
  ('Expressao -> ExpressaoRelacional','Expressao',1,'p_expressao','analisadorsintatico.py',216),
  ('Expressao -> ExpressaoAritmetica','Expressao',1,'p_expressao','analisadorsintatico.py',217),
  ('Expressao -> Termo','Expressao',1,'p_expressao','analisadorsintatico.py',218),
  ('Expressao -> Fator','Expressao',1,'p_expressao','analisadorsintatico.py',219),
  ('Atribuicao -> ID EQUALS Expressao','Atribuicao',3,'p_atribuicao','analisadorsintatico.py',225),
  ('EstruturaControle -> If','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',231),
  ('EstruturaControle -> While','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',232),
  ('EstruturaControle -> For','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',233),
  ('EstruturaControle -> Switch','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',234),
  ('EstruturaControle -> Break','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',235),
  ('EstruturaControle -> Continue','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',236),
  ('EstruturaControle -> Return','EstruturaControle',1,'p_estrutura_controle','analisadorsintatico.py',237),
  ('If -> IF LPAREN Expressao RPAREN Bloco','If',5,'p_if','analisadorsintatico.py',243),
  ('If -> IF LPAREN Expressao RPAREN Bloco ELSE Bloco','If',7,'p_if','analisadorsintatico.py',244),
  ('While -> WHILE LPAREN Expressao RPAREN Bloco','While',5,'p_while','analisadorsintatico.py',253),
  ('For -> FOR LPAREN Expressao SEMICOLON Expressao SEMICOLON Expressao RPAREN Bloco','For',9,'p_for','analisadorsintatico.py',259),
  ('Switch -> SWITCH LPAREN Expressao RPAREN LBRACE CaseLista RBRACE','Switch',7,'p_switch','analisadorsintatico.py',265),
  ('CaseLista -> CaseDecl','CaseLista',1,'p_case_lista','analisadorsintatico.py',271),
  ('CaseLista -> CaseLista CaseDecl','CaseLista',2,'p_case_lista','analisadorsintatico.py',272),
  ('CaseDecl -> CASE Expressao COLON Bloco','CaseDecl',4,'p_case_decl','analisadorsintatico.py',281),
  ('CaseDecl -> DEFAULT COLON Bloco','CaseDecl',3,'p_case_decl','analisadorsintatico.py',282),
  ('Break -> BREAK SEMICOLON','Break',2,'p_break','analisadorsintatico.py',291),
  ('Continue -> CONTINUE SEMICOLON','Continue',2,'p_continue','analisadorsintatico.py',297),
  ('Return -> RETURN Expressao SEMICOLON','Return',3,'p_return','analisadorsintatico.py',303),
  ('DeclaracaoEstrutura -> STRUCT ID LBRACE ListaDeclaracoes RBRACE SEMICOLON','DeclaracaoEstrutura',6,'p_declaracao_estrutura','analisadorsintatico.py',309),
  ('vazio -> <empty>','vazio',0,'p_vazio','analisadorsintatico.py',314),
  ('ExpressaoLogica -> ExpressaoRelacional','ExpressaoLogica',1,'p_expressao_logica','analisadorsintatico.py',319),
  ('ExpressaoLogica -> ExpressaoLogica AND ExpressaoRelacional','ExpressaoLogica',3,'p_expressao_logica','analisadorsintatico.py',320),
  ('ExpressaoLogica -> ExpressaoLogica OR ExpressaoRelacional','ExpressaoLogica',3,'p_expressao_logica','analisadorsintatico.py',321),
  ('ExpressaoLogica -> NOT ExpressaoRelacional','ExpressaoLogica',2,'p_expressao_logica','analisadorsintatico.py',322),
  ('ExpressaoRelacional -> ExpressaoAritmetica','ExpressaoRelacional',1,'p_expressao_relacional','analisadorsintatico.py',335),
  ('ExpressaoRelacional -> ExpressaoAritmetica MAIOR_QUE ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',336),
  ('ExpressaoRelacional -> ExpressaoAritmetica MENOR_QUE ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',337),
  ('ExpressaoRelacional -> ExpressaoAritmetica MA_IGUAL ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',338),
  ('ExpressaoRelacional -> ExpressaoAritmetica ME_IGUAL ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',339),
  ('ExpressaoRelacional -> ExpressaoAritmetica DIF_DE ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',340),
  ('ExpressaoRelacional -> ExpressaoAritmetica COMPARA ExpressaoAritmetica','ExpressaoRelacional',3,'p_expressao_relacional','analisadorsintatico.py',341),
  ('ExpressaoAritmetica -> ExpressaoAritmetica PLUS Termo SEMICOLON','ExpressaoAritmetica',4,'p_expressao_aritmetica','analisadorsintatico.py',350),
  ('ExpressaoAritmetica -> ExpressaoAritmetica MINUS Termo','ExpressaoAritmetica',3,'p_expressao_aritmetica','analisadorsintatico.py',351),
  ('ExpressaoAritmetica -> Termo','ExpressaoAritmetica',1,'p_expressao_aritmetica','analisadorsintatico.py',352),
  ('Termo -> Termo MULT Fator','Termo',3,'p_termo','analisadorsintatico.py',361),
  ('Termo -> Termo DIV Fator','Termo',3,'p_termo','analisadorsintatico.py',362),
  ('Termo -> Termo MOD Fator','Termo',3,'p_termo','analisadorsintatico.py',363),
  ('Termo -> Fator','Termo',1,'p_termo','analisadorsintatico.py',364),
  ('Fator -> LPAREN Expressao RPAREN','Fator',3,'p_fator','analisadorsintatico.py',373),
  ('Fator -> NUMBER','Fator',1,'p_fator','analisadorsintatico.py',374),
  ('Fator -> NUM_DEC','Fator',1,'p_fator','analisadorsintatico.py',375),
  ('Fator -> ID','Fator',1,'p_fator','analisadorsintatico.py',376),
  ('Fator -> TEXTO','Fator',1,'p_fator','analisadorsintatico.py',377),
]
